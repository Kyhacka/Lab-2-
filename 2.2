open System

// Функция для проверки, содержит ли число заданную цифру
let containsDigit digit number =
    number.ToString().Contains(digit.ToString())

// Функция для вычисления суммы элементов списка, содержащих заданную цифру, с использованием List.fold
let sumOfElementsWithDigit digit numbers =
    numbers
    |> List.fold (fun acc number -> 
        if containsDigit digit number then acc + number else acc) 0

// Функция для ввода списка чисел с клавиатуры (по одному числу)
let inputNumbers () =
    let rec readNumbers (acc: int list) =
        printfn "Введите число (или нажмите Enter для завершения):"
        let input = Console.ReadLine()
        if String.IsNullOrEmpty(input) then
            acc // Возвращаем накопленный список, если введена пустая строка
        else
            match Int32.TryParse(input) with
            | true, number -> readNumbers (number :: acc) // Добавляем число в список и продолжаем
            | false, _ -> 
                printfn "Некорректный ввод. Пожалуйста, введите целое число."
                readNumbers acc // Повторяем ввод

    readNumbers [] // Начинаем с пустого списка
    |> List.rev // Переворачиваем список, чтобы порядок был как при вводе

// Функция для ввода цифры с клавиатуры
let inputDigit () =
    printfn "Введите цифру для поиска:"
    let input = Console.ReadLine()
    match Int32.TryParse(input) with
    | true, digit when digit >= 0 && digit <= 9 -> digit // Проверяем, что введена одна цифра
    | _ -> 
        printfn "Некорректный ввод. Пожалуйста, введите одну цифру (0-9)."
        inputDigit() // Повторяем ввод

// Основная программа
[<EntryPoint>]
let main argv =
    // Ввод списка чисел
    let numbers = inputNumbers()

    // Ввод цифры
    let targetDigit = inputDigit()

    // Вычисляем сумму
    let result = sumOfElementsWithDigit targetDigit numbers

    // Выводим результат
    printfn "Исходный список: %A" numbers
    printfn "Сумма элементов, содержащих цифру %d: %d" targetDigit result

    0 // Возвращаем код завершения программы
